		
#Область ПрограммныйИнтерфейс
		
// Рассчитывает необоснованные часы отсутствия сотрудника за день.
//
// Параметры:
//  ДокументТабеля - ДокументОбъект.ТабельУчетаРабочегоВремени - Табель учета рабочего времени. 
//  Сотрудник - СправочникСсылка.Сотрудники - Сотрудник. 
//  День - Число - Номер дня. 
//  СтрокиВремениПоСотруднику - Массив Из СтрокаТабличнойЧасти, Неопределено - Данные о времени по сотруднику. 
//
Процедура РассчитатьНеобоснованныеЧасыОтсутствияСотрудника(ДокументТабеля, Сотрудник, День, Знач СтрокиВремениПоСотруднику = Неопределено) Экспорт
	
	Если СтрокиВремениПоСотруднику = Неопределено Тогда
		СтруктураПоискаДанныхВремени = Новый Структура;
		СтруктураПоискаДанныхВремени.Вставить("Сотрудник", Сотрудник);
		СтрокиВремениПоСотруднику = ДокументТабеля.ДанныеОВремени.НайтиСтроки(СтруктураПоискаДанныхВремени);
	КонецЕсли;
	
	СтруктураПоискаКонтроляВремени = Новый Структура;
	СтруктураПоискаКонтроляВремени.Вставить("Сотрудник", Сотрудник);
	СтруктураПоискаКонтроляВремени.Вставить("НомерДня", День);
	СтрокиКонтроляПоСотруднику = ДокументТабеля.КРВС_КонтрольПосещаемости.НайтиСтроки(СтруктураПоискаКонтроляВремени);
	
	Если СтрокиКонтроляПоСотруднику.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаКонтроляПоСотруднику = СтрокиКонтроляПоСотруднику[0];
	
	ВсегоЧасовЗаДень = 0;
	Для Каждого СтрокаВремениПоСотруднику Из СтрокиВремениПоСотруднику Цикл
		ВсегоЧасовЗаДень = ВсегоЧасовЗаДень + СтрокаВремениПоСотруднику["Часов" + День];				
	КонецЦикла;
	
	СтрокаКонтроляПоСотруднику.ОбоснованныеЧасы = Мин(ВсегоЧасовЗаДень, СтрокаКонтроляПоСотруднику.НормаЧасов);
	СтрокаКонтроляПоСотруднику.НеобоснованныеЧасы = Макс(СтрокаКонтроляПоСотруднику.НормаЧасов - СтрокаКонтроляПоСотруднику.ОбоснованныеЧасы, 0);

КонецПроцедуры    

// Заполняет итоги необоснованных отсутствий по сотрудникам.
//
// Параметры:
//  ДокументТабеля - ДокументОбъект.ТабельУчетаРабочегоВремени - Табель учета рабочего времени. 
//  Сотрудники - Массив Из СправочникСсылка.Сотрудники - Сотрудники к отбору.
//
Процедура ЗаполнитьИтогиНеобоснованныхОтсутствийПоСотрудникам(ДокументТабеля, Сотрудники = Неопределено) Экспорт
			
	КонтрольПосещаемости = КРВС_КонтрольРабочегоВремениСотрудниковВызовСервера.ИтогиНеобоснованныхОтсутствийПоСотрудникам(ДокументТабеля, Сотрудники);
	
	Для Каждого СтрокаКонтроля Из КонтрольПосещаемости Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Сотрудник", СтрокаКонтроля.Сотрудник);
		
		СтрокиВремениПоСотруднику = ДокументТабеля.ДанныеОВремени.НайтиСтроки(СтруктураПоиска);
		Если СтрокиВремениПоСотруднику.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;     
		
		СтрокаВремениПоСотруднику = СтрокиВремениПоСотруднику[0];
		
		СтрокаВремениПоСотруднику.КРВС_НормаЧасов = СтрокаКонтроля.НормаЧасов;
		СтрокаВремениПоСотруднику.КРВС_ОбоснованныеЧасы = СтрокаКонтроля.ОбоснованныеЧасы;
		СтрокаВремениПоСотруднику.КРВС_НеобоснованныеЧасы = СтрокаКонтроля.НеобоснованныеЧасы;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
